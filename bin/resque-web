#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.dirname(__FILE__) + '/../lib')
begin
  require 'vegas'
rescue LoadError
  require 'rubygems'
  require 'vegas'
end  
require 'resque/server'

# preserve original ARGV for $PROGRAM_NAME modification.
original_argv = ARGV.dup

Vegas::Runner.new(Resque::Server, 'resque-web', {
  :before_run => lambda {|v|
    path = (ENV['RESQUECONFIG'] || v.args.first)
    load path.to_s.strip if path
  }
}) do |runner, opts, app|
  opts.on('-N NAMESPACE', "--namespace NAMESPACE", "set the Redis namespace") {|namespace|
    runner.logger.info "Using Redis namespace '#{namespace}'"
    Resque.redis.namespace = namespace
  }
  opts.on('-r redis-connection', "--redis redis-connection", "set the Redis connection string") {|redis_conf|
    runner.logger.info "Using Redis connection '#{redis_conf}'"
    Resque.redis = redis_conf
  }
  opts.on('--redis-password redis-password', "set the Redis password"){ |redis_password|
    runner.logger.info "Using Redis password '#{redis_password}'"
    Resque.redis.auth(redis_password)

    # hide --redis-password argument from ps(1) top(1)
    masked_argv = original_argv.dup
    redis_password_pos = masked_argv.index('--redis-password')
    masked_argv.delete_at(redis_password_pos)
    masked_argv.delete_at(redis_password_pos + 1)
    $PROGRAM_NAME = "#{$PROGRAM_NAME} #{masked_argv}"
  }
end

<% if failed_multiple_queues? && !params[:queue] %>
<h1>All Failed Queues: <%= Resque::Failure.queues.size %> total</h1>
<% else %>
<h1>Failed Jobs <%= "on '#{params[:queue]}'" if params[:queue] %> <%= "with class '#{params[:class]}'" if params[:class] %></h1>
<% end %>

<% unless failed_size.zero? %>
<form method="POST" action="<%= u "failed#{'/' + params[:queue] if params[:queue]}/clear" %>">
  <input type="submit" name="" value="Clear <%= params[:queue] ? "'#{params[:queue]}'" : 'Failed' %> Jobs" />
</form>
<form method="POST" action="<%= u "failed#{'/' + params[:queue] if params[:queue]}/requeue/all" %>">
  <input type="submit" name="" value="Retry <%= params[:queue] ? "'#{params[:queue]}'" : 'Failed' %> Jobs" />
</form>
<% end %>

<% if failed_multiple_queues? && !params[:queue] %>
<%= partial :failed_queues_overview %>
<% else %>
<p class='sub'>Showing <%= failed_start_at %> to <%= failed_end_at %> of <b><%= failed_size %></b> jobs</p>


<ul class='failed'>
  <% Resque::Failure.each(failed_start_at, failed_per_page, params[:queue], params[:class], failed_order) do |id, job| %>
    <%= partial :failed_job, :id => id, :job => job %>
  <% end %>
</ul>

<%= partial :next_more, :start => failed_start_at, :size => failed_size, :per_page => failed_per_page %>
<% end %>
